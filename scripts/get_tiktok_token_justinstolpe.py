#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è TikTok —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ —Å–∞–π—Ç Justin Stolpe
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
"""

import requests
import json
from pathlib import Path

print("=" * 70)
print("üîê –ü–æ–ª—É—á–µ–Ω–∏–µ TikTok Token —á–µ—Ä–µ–∑ Justin Stolpe")
print("=" * 70)
print("\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Justin Stolpe!")
print("   –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ production!")
print("   –î–ª—è production —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ get_tiktok_token.py")
print("=" * 70)

# Credentials –æ—Ç Justin Stolpe (–ø—É–±–ª–∏—á–Ω—ã–µ, —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
CLIENT_KEY = "sbaw4p2aqcik26biuo"
CLIENT_SECRET = "h70qAC0IZJ4RBfIIqQxDu0M3ybTUmFyu"
REDIRECT_URI = "https://justinstolpe.com/blog_code/tiktokapi/login.php"

print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
print("=" * 70)
print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ (—Å VPN):")
print("   https://justinstolpe.com/blog_code/tiktokapi/login.php")
print()
print("2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É 'Click here to log in with TikTok'")
print()
print("3. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤ TikTok –∏ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø")
print()
print("4. –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞–π–¥–∏—Ç–µ 'Code From TikTok'")
print("   (–≠—Ç–æ –¥–ª–∏–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å —Å–∏–º–≤–æ–ª–∞–º–∏)")
print()
print("5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –¢–û–õ–¨–ö–û –ö–û–î (–±–µ–∑ –∑–≤–µ–∑–¥–æ—á–∫–∏ * –≤ –∫–æ–Ω—Ü–µ)")
print("=" * 70)

AUTHORIZATION_CODE = input("\nüìù –í—Å—Ç–∞–≤—å—Ç–µ Authorization Code: ").strip()

if not AUTHORIZATION_CODE:
    print("‚ùå –ö–æ–¥ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
    exit(1)

# –£–¥–∞–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
AUTHORIZATION_CODE = AUTHORIZATION_CODE.replace('*0!', '*0!')  # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ–ø–µ—á–∞—Ç–∫–∏

print("\nüîÑ –û–±–º–µ–Ω –∫–æ–¥–∞ –Ω–∞ Access Token...")

url = "https://open.tiktokapis.com/v2/oauth/token/"
data = {
    "client_key": CLIENT_KEY,
    "client_secret": CLIENT_SECRET,
    "code": AUTHORIZATION_CODE,
    "grant_type": "authorization_code",
    "redirect_uri": REDIRECT_URI
}

try:
    response = requests.post(url, data=data, timeout=30)
    result = response.json()
    
    print(f"\nüì• –û—Ç–≤–µ—Ç –æ—Ç TikTok (HTTP {response.status_code}):")
    
    # TikTok API v2 –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–∫–µ–Ω –≤ –ø–æ–ª–µ data
    if "data" in result and "access_token" in result["data"]:
        token_data = result["data"]
        
        print("\n" + "=" * 70)
        print("üéâ –£–°–ü–ï–•! –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω!")
        print("=" * 70)
        
        print(f"\n‚úÖ Access Token:")
        print(token_data["access_token"])
        
        if "refresh_token" in token_data:
            print(f"\n‚úÖ Refresh Token:")
            print(token_data["refresh_token"])
        
        if "expires_in" in token_data:
            expires_hours = token_data["expires_in"] // 3600
            print(f"\n‚è∞ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: {expires_hours} —á–∞—Å–æ–≤")
        
        if "open_id" in token_data:
            print(f"\nüÜî Open ID: {token_data['open_id']}")
        
        print("\n" + "=" * 70)
        print("üìù –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤ .env:")
        print("=" * 70)
        print(f"TIKTOK_CLIENT_KEY={CLIENT_KEY}")
        print(f"TIKTOK_CLIENT_SECRET={CLIENT_SECRET}")
        print(f"TIKTOK_ACCESS_TOKEN={token_data['access_token']}")
        
        if "refresh_token" in token_data:
            print(f"TIKTOK_REFRESH_TOKEN={token_data['refresh_token']}")
        
        print("\n" + "=" * 70)
        print("‚ö†Ô∏è  –í–ê–ñ–ù–û!")
        print("=" * 70)
        print("‚ùå –≠—Ç–æ —Ç–æ–∫–µ–Ω —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Justin Stolpe")
        print("‚ùå –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –≤–∏–¥–µ–æ")
        print("‚úÖ –î–ª—è production —Å–æ–∑–¥–∞–π—Ç–µ –°–í–û–ï –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:")
        print("   1. https://developers.tiktok.com/")
        print("   2. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
        print("   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python scripts/get_tiktok_token.py")
        print("=" * 70)
        
        # –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        try:
            auto_save = input("\nüíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ .env –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è? (y/n): ").strip().lower()
            
            if auto_save == 'y':
                env_path = Path('.env')
                
                if env_path.exists():
                    env_content = env_path.read_text(encoding='utf-8')
                else:
                    env_content = ""
                
                lines = env_content.split('\n')
                updated = {
                    'client_key': False,
                    'client_secret': False,
                    'access_token': False,
                    'refresh_token': False
                }
                
                for i, line in enumerate(lines):
                    if line.startswith('TIKTOK_CLIENT_KEY='):
                        lines[i] = f'TIKTOK_CLIENT_KEY={CLIENT_KEY}'
                        updated['client_key'] = True
                    elif line.startswith('TIKTOK_CLIENT_SECRET='):
                        lines[i] = f'TIKTOK_CLIENT_SECRET={CLIENT_SECRET}'
                        updated['client_secret'] = True
                    elif line.startswith('TIKTOK_ACCESS_TOKEN='):
                        lines[i] = f'TIKTOK_ACCESS_TOKEN={token_data["access_token"]}'
                        updated['access_token'] = True
                    elif "refresh_token" in token_data and line.startswith('TIKTOK_REFRESH_TOKEN='):
                        lines[i] = f'TIKTOK_REFRESH_TOKEN={token_data["refresh_token"]}'
                        updated['refresh_token'] = True
                
                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è
                if not updated['client_key']:
                    lines.append(f'TIKTOK_CLIENT_KEY={CLIENT_KEY}')
                if not updated['client_secret']:
                    lines.append(f'TIKTOK_CLIENT_SECRET={CLIENT_SECRET}')
                if not updated['access_token']:
                    lines.append(f'TIKTOK_ACCESS_TOKEN={token_data["access_token"]}')
                if "refresh_token" in token_data and not updated['refresh_token']:
                    lines.append(f'TIKTOK_REFRESH_TOKEN={token_data["refresh_token"]}')
                
                new_content = '\n'.join(lines)
                env_path.write_text(new_content, encoding='utf-8')
                
                print("‚úÖ –§–∞–π–ª .env –æ–±–Ω–æ–≤–ª–µ–Ω!")
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ .env: {e}")
    
    # –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ (–µ—Å–ª–∏ –≤–¥—Ä—É–≥)
    elif "access_token" in result:
        print("\n" + "=" * 70)
        print("üéâ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω!")
        print("=" * 70)
        print(f"\nAccess Token: {result['access_token']}")
    
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞:")
        print(json.dumps(result, indent=2, ensure_ascii=False))
        
        if "error" in result:
            error = result["error"]
            error_desc = result.get("error_description", "")
            
            print(f"\nüí° –ü—Ä–∏—á–∏–Ω–∞: {error} - {error_desc}")
            
            if error == "invalid_grant":
                print("\nüî¥ –ö–æ–¥ –∏—Å—Ç—ë–∫ –∏–ª–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω!")
                print("   Authorization code –¥–µ–π—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ 10 –º–∏–Ω—É—Ç")
                print("   –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ–¥ –Ω–∞ —Å–∞–π—Ç–µ:")
                print("   https://justinstolpe.com/blog_code/tiktokapi/login.php")
            elif error == "invalid_client":
                print("\nüî¥ –ù–µ–≤–µ—Ä–Ω—ã–µ credentials!")
                print("   (–≠—Ç–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —Å –ø—É–±–ª–∏—á–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º)")
            
            print("\nüìã –°–æ–≤–µ—Ç—ã:")
            print("   - –ö–æ–¥ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑")
            print("   - –ö–æ–¥ –¥–µ–π—Å—Ç–≤—É–µ—Ç 10 –º–∏–Ω—É—Ç")
            print("   - –ö–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –ë–ï–ó –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤")
            print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ VPN –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –†–§")

except requests.RequestException as e:
    print(f"\n‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
    print("\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
    print("   - –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
    print("   - VPN (–µ—Å–ª–∏ –≤ –†–§)")
    print("   - Firewall –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å—ã")

except Exception as e:
    print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()

print("\n" + "=" * 70)
print("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ!")
print("=" * 70)
