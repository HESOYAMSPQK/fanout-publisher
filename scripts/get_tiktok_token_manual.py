#!/usr/bin/env python3
"""
–ü–æ–ª—É—á–µ–Ω–∏–µ TikTok Access Token –≤—Ä—É—á–Ω—É—é —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π PKCE
"""

import hashlib
import base64
import secrets
import requests
import webbrowser
from urllib.parse import urlencode, parse_qs, urlparse

print("=" * 70)
print("üîê TikTok Access Token - –†—É—á–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å PKCE")
print("=" * 70)

# –®–∞–≥ 1: –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
print("\nüìù –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ TikTok Developer Portal:\n")

CLIENT_KEY = input("Client Key: ").strip()
CLIENT_SECRET = input("Client Secret: ").strip()

if not CLIENT_KEY or not CLIENT_SECRET:
    print("‚ùå –û—à–∏–±–∫–∞: Client Key –∏ Client Secret –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!")
    exit(1)

REDIRECT_URI = "http://localhost:8080/callback"
STATE = secrets.token_urlsafe(16)

# –®–∞–≥ 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PKCE code_verifier –∏ code_challenge
print("\nüîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PKCE –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤...")

# Code verifier: —Å–ª—É—á–∞–π–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ 43-128 —Å–∏–º–≤–æ–ª–æ–≤
code_verifier = secrets.token_urlsafe(64)

# Code challenge: SHA256 hash of code_verifier, base64url encoded
code_challenge_bytes = hashlib.sha256(code_verifier.encode('utf-8')).digest()
code_challenge = base64.urlsafe_b64encode(code_challenge_bytes).decode('utf-8').rstrip('=')

print(f"‚úÖ Code verifier —Å–æ–∑–¥–∞–Ω: {code_verifier[:20]}...")
print(f"‚úÖ Code challenge —Å–æ–∑–¥–∞–Ω: {code_challenge[:20]}...")

# –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ Authorization URL
print("\nüåê –°–æ–∑–¥–∞–Ω–∏–µ Authorization URL...")

auth_params = {
    'client_key': CLIENT_KEY,
    'scope': 'user.info.basic,video.upload,video.publish',
    'response_type': 'code',
    'redirect_uri': REDIRECT_URI,
    'state': STATE,
    'code_challenge': code_challenge,
    'code_challenge_method': 'S256'
}

auth_url = f"https://www.tiktok.com/v2/auth/authorize/?{urlencode(auth_params)}"

print("\n" + "=" * 70)
print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
print("=" * 70)
print("\n1. –°–µ–π—á–∞—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä —Å TikTok –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
print("2. –í–æ–π–¥–∏—Ç–µ –≤ –≤–∞—à TikTok –∞–∫–∫–∞—É–Ω—Ç")
print("3. –ù–∞–∂–º–∏—Ç–µ 'Authorize' / '–†–∞–∑—Ä–µ—à–∏—Ç—å'")
print("4. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∂–µ—Ç –æ—à–∏–±–∫—É - –≠–¢–û –ù–û–†–ú–ê–õ–¨–ù–û!")
print("5. –°–ö–û–ü–ò–†–£–ô–¢–ï –í–ï–°–¨ URL –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞")
print("\n" + "=" * 70)

input("\nüîµ –ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä...")

# –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
webbrowser.open(auth_url)

print("\n‚úÖ –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç!")
print("‚ö†Ô∏è  –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ URL –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞\n")

# –®–∞–≥ 4: –ü–æ–ª—É—á–µ–Ω–∏–µ callback URL
callback_url = input("üìã –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ URL –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞:\n").strip()

if not callback_url:
    print("‚ùå URL –Ω–µ –≤–≤–µ–¥–µ–Ω!")
    exit(1)

# –ü–∞—Ä—Å–∏–º callback URL
try:
    parsed = urlparse(callback_url)
    params = parse_qs(parsed.query)
    
    if 'code' not in params:
        print("‚ùå –û—à–∏–±–∫–∞: –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ URL!")
        print(f"–ü–æ–ª—É—á–µ–Ω–Ω—ã–π URL: {callback_url}")
        exit(1)
    
    authorization_code = params['code'][0]
    print(f"\n‚úÖ –ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω: {authorization_code[:20]}...")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ URL: {e}")
    exit(1)

# –®–∞–≥ 5: –û–±–º–µ–Ω –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω
print("\nüîÑ –û–±–º–µ–Ω –∫–æ–¥–∞ –Ω–∞ Access Token...")

token_url = "https://open.tiktokapis.com/v2/oauth/token/"
token_data = {
    'client_key': CLIENT_KEY,
    'client_secret': CLIENT_SECRET,
    'code': authorization_code,
    'grant_type': 'authorization_code',
    'redirect_uri': REDIRECT_URI,
    'code_verifier': code_verifier  # –í–∞–∂–Ω–æ! PKCE verifier
}

try:
    response = requests.post(token_url, data=token_data)
    result = response.json()
    
    print(f"\nüì• –û—Ç–≤–µ—Ç –æ—Ç TikTok (HTTP {response.status_code}):")
    
    if response.status_code == 200 and 'access_token' in result:
        print("\n" + "=" * 70)
        print("üéâ –£–°–ü–ï–•! –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω!")
        print("=" * 70)
        
        access_token = result['access_token']
        refresh_token = result.get('refresh_token', '')
        expires_in = result.get('expires_in', 0)
        
        print(f"\n‚úÖ Access Token:")
        print(f"   {access_token}")
        
        if refresh_token:
            print(f"\n‚úÖ Refresh Token:")
            print(f"   {refresh_token}")
        
        print(f"\n‚è∞ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: {expires_in} —Å–µ–∫—É–Ω–¥ ({expires_in//3600} —á–∞—Å–æ–≤)")
        
        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é
        print("\n" + "=" * 70)
        print("üìù –°–ö–û–ü–ò–†–£–ô–¢–ï –í .env –§–ê–ô–õ:")
        print("=" * 70)
        print(f"\nTIKTOK_ACCESS_TOKEN={access_token}")
        if refresh_token:
            print(f"TIKTOK_REFRESH_TOKEN={refresh_token}")
        
        print("\n" + "=" * 70)
        print("üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("=" * 70)
        print("\n1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª .env –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞")
        print("2. –î–æ–±–∞–≤—å—Ç–µ/–æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–æ–∫—É TIKTOK_ACCESS_TOKEN")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose up -d")
        print("4. –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ: python scripts/test_tiktok_upload.py")
        
        # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç—å .env
        print("\n" + "=" * 70)
        auto_save = input("\nüíæ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç—å .env —Ñ–∞–π–ª? (y/n): ").strip().lower()
        
        if auto_save == 'y':
            try:
                import os
                from pathlib import Path
                
                env_path = Path('.env')
                
                if env_path.exists():
                    env_content = env_path.read_text(encoding='utf-8')
                else:
                    env_content = ""
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω—ã
                lines = env_content.split('\n')
                updated = False
                
                for i, line in enumerate(lines):
                    if line.startswith('TIKTOK_ACCESS_TOKEN='):
                        lines[i] = f'TIKTOK_ACCESS_TOKEN={access_token}'
                        updated = True
                    elif refresh_token and line.startswith('TIKTOK_REFRESH_TOKEN='):
                        lines[i] = f'TIKTOK_REFRESH_TOKEN={refresh_token}'
                
                if not updated:
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏
                    if env_content and not env_content.endswith('\n'):
                        lines.append('')
                    lines.append(f'TIKTOK_ACCESS_TOKEN={access_token}')
                    if refresh_token:
                        lines.append(f'TIKTOK_REFRESH_TOKEN={refresh_token}')
                
                new_content = '\n'.join(lines)
                env_path.write_text(new_content, encoding='utf-8')
                
                print("‚úÖ –§–∞–π–ª .env –æ–±–Ω–æ–≤–ª–µ–Ω!")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ .env: {e}")
                print("üìù –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –≤—Ä—É—á–Ω—É—é")
        
        print("\n‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    else:
        print("\n‚ùå –û–®–ò–ë–ö–ê –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:")
        print("=" * 70)
        
        if 'error' in result:
            print(f"–û—à–∏–±–∫–∞: {result['error']}")
        if 'error_description' in result:
            print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {result['error_description']}")
        if 'message' in result:
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {result['message']}")
        
        print("\n–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç:")
        import json
        print(json.dumps(result, indent=2, ensure_ascii=False))
        
        print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("- –ù–µ–≤–µ—Ä–Ω—ã–π Client Key –∏–ª–∏ Client Secret")
        print("- –ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏—Å—Ç—ë–∫ (–¥–µ–π—Å—Ç–≤—É–µ—Ç 10 –º–∏–Ω—É—Ç)")
        print("- Redirect URI –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –≤ TikTok Developer Portal")
        
except requests.exceptions.RequestException as e:
    print(f"\n‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
    print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ VPN (–¥–ª—è –†–§)")
    
except Exception as e:
    print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

print("\n" + "=" * 70)
print("üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: TIKTOK_MANUAL_TOKEN.md")
print("=" * 70)

