#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –Ω–∞ VK

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ –Ω–∞ VK
–±–µ–∑ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from platforms.vk import VKPublisher


def test_vk_upload(video_path: str, access_token: str):
    """
    –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –Ω–∞ VK
    
    Args:
        video_path: –ü—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É –≤–∏–¥–µ–æ
        access_token: VK Access Token
    """
    print("="*60)
    print("üß™ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –Ω–∞ VK")
    print("="*60)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞
    if not os.path.exists(video_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {video_path}")
        sys.exit(1)
    
    file_size = os.path.getsize(video_path)
    print(f"üìÅ –§–∞–π–ª: {video_path}")
    print(f"üìä –†–∞–∑–º–µ—Ä: {file_size / (1024*1024):.2f} –ú–ë")
    print()
    
    # –°–æ–∑–¥–∞–µ–º publisher
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ VK Publisher...")
    publisher = VKPublisher(
        access_token=access_token,
        group_id=None  # –ü—É–±–ª–∏–∫—É–µ–º –æ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    )
    print("‚úÖ Publisher —Å–æ–∑–¥–∞–Ω")
    print()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ
    print("üì§ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ...")
    print("‚ö†Ô∏è  –í–∏–¥–µ–æ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ –ü–†–ò–í–ê–¢–ù–û–ú —Ä–µ–∂–∏–º–µ")
    print()
    
    try:
        result = publisher.publish_video(
            video_path=video_path,
            title="[–¢–ï–°–¢] Fanout Publisher VK Test",
            description="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ —á–µ—Ä–µ–∑ Fanout Publisher.\n–ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.",
            is_private=True,  # –ü–†–ò–í–ê–¢–ù–û–ï –¥–ª—è —Ç–µ—Å—Ç–∞
            is_clip=False,  # –û–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ, –Ω–µ –∫–ª–∏–ø
            wallpost=False  # –ù–µ –ø—É–±–ª–∏–∫—É–µ–º –Ω–∞ —Å—Ç–µ–Ω–µ
        )
        
        print()
        print("="*60)
        print("‚úÖ –£–°–ü–ï–®–ù–û!")
        print("="*60)
        print()
        print(f"üÜî Video ID: {result['platform_job_id']}")
        print(f"üîó URL: {result['public_url']}")
        print(f"üìä –°—Ç–∞—Ç—É—Å: {result['status']}")
        print()
        print("="*60)
        print("üìã –ß—Ç–æ –¥–∞–ª—å—à–µ:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ")
        print("3. –ï—Å–ª–∏ –≤—Å—ë –æ–∫ - –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å VK –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏!")
        print("4. –¢–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤–∏–¥–µ–æ")
        print("="*60)
        print()
        
        return result
        
    except Exception as e:
        print()
        print("="*60)
        print("‚ùå –û–®–ò–ë–ö–ê")
        print("="*60)
        print(f"–¢–∏–ø: {type(e).__name__}")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {str(e)}")
        print()
        print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("- –ù–µ–≤–µ—Ä–Ω—ã–π Access Token")
        print("- –¢–æ–∫–µ–Ω –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ (scope: video)")
        print("- –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π")
        print("- –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é")
        print("="*60)
        print()
        sys.exit(1)


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º Access Token –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º
    access_token = os.getenv('VK_ACCESS_TOKEN')
    
    if not access_token:
        print("‚öôÔ∏è  VK_ACCESS_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print()
        access_token = input("–í–≤–µ–¥–∏—Ç–µ VK Access Token: ").strip()
        
        if not access_token:
            print("‚ùå Access Token –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
            sys.exit(1)
    
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ
    if len(sys.argv) > 1:
        video_path = sys.argv[1]
    else:
        print("üìπ –ü—É—Ç—å –∫ –≤–∏–¥–µ–æ –Ω–µ —É–∫–∞–∑–∞–Ω")
        print()
        video_path = input("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É –≤–∏–¥–µ–æ: ").strip()
        
        if not video_path:
            print("‚ùå –ü—É—Ç—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
            sys.exit(1)
    
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    test_vk_upload(video_path, access_token)


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ùå –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    except Exception as e:
        print(f"\n‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)



