#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–º–µ–Ω–∞ TikTok authorization code –Ω–∞ access token

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç, –µ—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ authorization code –≤—Ä—É—á–Ω—É—é
—á–µ—Ä–µ–∑ callback URL –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python scripts/exchange_tiktok_code.py
"""

import sys
import os
import requests
import urllib.parse

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows
if sys.platform == 'win32':
    if hasattr(sys.stdout, 'reconfigure'):
        try:
            sys.stdout.reconfigure(encoding='utf-8')
            sys.stderr.reconfigure(encoding='utf-8')
        except:
            pass
    try:
        os.system('chcp 65001 >nul 2>&1')
    except:
        pass


TOKEN_URL = "https://open.tiktokapis.com/v2/oauth/token/"


def extract_code_from_url(url: str) -> str:
    """–ò–∑–≤–ª–µ—á—å authorization code –∏–∑ callback URL"""
    try:
        parsed = urllib.parse.urlparse(url)
        params = urllib.parse.parse_qs(parsed.query)
        
        if 'code' in params:
            code = params['code'][0]
            # URL decode –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
            code = urllib.parse.unquote(code)
            return code
        else:
            raise ValueError("–ü–∞—Ä–∞–º–µ—Ç—Ä 'code' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ URL")
    
    except Exception as e:
        raise ValueError(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å URL: {e}")


def exchange_code_for_token(
    client_key: str,
    client_secret: str,
    code: str,
    redirect_uri: str
) -> dict:
    """–û–±–º–µ–Ω—è—Ç—å authorization code –Ω–∞ access token"""
    
    data = {
        'client_key': client_key,
        'client_secret': client_secret,
        'code': code,
        'grant_type': 'authorization_code',
        'redirect_uri': redirect_uri
    }
    
    headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Cache-Control': 'no-cache'
    }
    
    print("\nüîÑ –û–±–º–µ–Ω authorization code –Ω–∞ access token...")
    print(f"üì° –ó–∞–ø—Ä–æ—Å –∫: {TOKEN_URL}")
    print()
    
    try:
        response = requests.post(TOKEN_URL, data=data, headers=headers, timeout=30)
        
        print(f"üì• –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        result = response.json()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        if response.status_code != 200:
            print("\n‚ö†Ô∏è  –û—Ç–≤–µ—Ç –æ—Ç API:")
            import json
            print(json.dumps(result, indent=2, ensure_ascii=False))
        
        if 'error' in result:
            error_msg = result.get('error', 'Unknown error')
            error_desc = result.get('error_description', 'No description')
            raise Exception(f"TikTok API Error: {error_msg} - {error_desc}")
        
        return result
        
    except requests.RequestException as e:
        raise Exception(f"–û—à–∏–±–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–∞: {str(e)}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("=" * 70)
    print("üîÑ –û–±–º–µ–Ω TikTok Authorization Code –Ω–∞ Access Token")
    print("=" * 70)
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º Client Key –∏ Secret
    print("üì± –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ TikTok Developer Portal:")
    print("-" * 70)
    
    client_key = input("Client Key: ").strip()
    if not client_key:
        print("‚ùå Client Key –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        sys.exit(1)
    
    client_secret = input("Client Secret: ").strip()
    if not client_secret:
        print("‚ùå Client Secret –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        sys.exit(1)
    
    print()
    print("-" * 70)
    print("üìã –¢–µ–ø–µ—Ä—å –≤—Å—Ç–∞–≤—å—Ç–µ callback URL –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞")
    print("   (–ü–æ–ª–Ω—ã–π URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä:")
    print("   https://xxx.ngrok-free.dev/callback?code=...&scopes=...)")
    print("-" * 70)
    print()
    
    callback_url = input("Callback URL: ").strip()
    if not callback_url:
        print("‚ùå URL –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        sys.exit(1)
    
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ –∏–∑ URL
        auth_code = extract_code_from_url(callback_url)
        
        print()
        print("‚úÖ Authorization code –∏–∑–≤–ª–µ—á–µ–Ω –∏–∑ URL:")
        print(f"   {auth_code[:50]}..." if len(auth_code) > 50 else f"   {auth_code}")
        print()
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º redirect_uri (–±–∞–∑–æ–≤–∞—è —á–∞—Å—Ç—å URL)
        parsed = urllib.parse.urlparse(callback_url)
        redirect_uri = f"{parsed.scheme}://{parsed.netloc}{parsed.path}"
        
        print(f"‚úÖ Redirect URI:")
        print(f"   {redirect_uri}")
        print()
        
        # –û–±–º–µ–Ω–∏–≤–∞–µ–º –∫–æ–¥ –Ω–∞ —Ç–æ–∫–µ–Ω
        token_data = exchange_code_for_token(
            client_key,
            client_secret,
            auth_code,
            redirect_uri
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ (TikTok API v2)
        if 'data' in token_data:
            token_info = token_data['data']
        else:
            token_info = token_data
        
        access_token = token_info.get('access_token')
        refresh_token = token_info.get('refresh_token')
        expires_in = token_info.get('expires_in', 0)
        open_id = token_info.get('open_id', '')
        
        if not access_token:
            raise Exception("Access token –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ API")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print()
        print("=" * 70)
        print("‚úÖ TikTok Access Token —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω!")
        print("=" * 70)
        print()
        print(f"üÜî Open ID: {open_id}")
        print(f"‚è∞ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: {expires_in} —Å–µ–∫ ({expires_in // 3600} —á–∞—Å–æ–≤)")
        print()
        print(f"‚úÖ Access Token:")
        print(access_token)
        
        if refresh_token:
            print()
            print(f"‚úÖ Refresh Token:")
            print(refresh_token)
        
        print()
        print("=" * 70)
        print("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–∏ —Å—Ç—Ä–æ–∫–∏ –≤ .env —Ñ–∞–π–ª:")
        print("=" * 70)
        print(f"TIKTOK_CLIENT_KEY={client_key}")
        print(f"TIKTOK_CLIENT_SECRET={client_secret}")
        print(f"TIKTOK_ACCESS_TOKEN={access_token}")
        
        if refresh_token:
            print(f"TIKTOK_REFRESH_TOKEN={refresh_token}")
        
        print("=" * 70)
        
        # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        try:
            save = input("\nüíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ .env —Ñ–∞–π–ª? (y/n): ").strip().lower()
            
            if save == 'y':
                from pathlib import Path
                
                env_path = Path('.env')
                
                if env_path.exists():
                    env_content = env_path.read_text(encoding='utf-8')
                else:
                    env_content = ""
                
                lines = env_content.split('\n')
                updated = {
                    'client_key': False,
                    'client_secret': False,
                    'access_token': False,
                    'refresh_token': False
                }
                
                for i, line in enumerate(lines):
                    if line.startswith('TIKTOK_CLIENT_KEY='):
                        lines[i] = f'TIKTOK_CLIENT_KEY={client_key}'
                        updated['client_key'] = True
                    elif line.startswith('TIKTOK_CLIENT_SECRET='):
                        lines[i] = f'TIKTOK_CLIENT_SECRET={client_secret}'
                        updated['client_secret'] = True
                    elif line.startswith('TIKTOK_ACCESS_TOKEN='):
                        lines[i] = f'TIKTOK_ACCESS_TOKEN={access_token}'
                        updated['access_token'] = True
                    elif line.startswith('TIKTOK_REFRESH_TOKEN='):
                        if refresh_token:
                            lines[i] = f'TIKTOK_REFRESH_TOKEN={refresh_token}'
                            updated['refresh_token'] = True
                
                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ
                if not updated['client_key']:
                    lines.append(f'TIKTOK_CLIENT_KEY={client_key}')
                if not updated['client_secret']:
                    lines.append(f'TIKTOK_CLIENT_SECRET={client_secret}')
                if not updated['access_token']:
                    lines.append(f'TIKTOK_ACCESS_TOKEN={access_token}')
                if refresh_token and not updated['refresh_token']:
                    lines.append(f'TIKTOK_REFRESH_TOKEN={refresh_token}')
                
                new_content = '\n'.join(lines)
                env_path.write_text(new_content, encoding='utf-8')
                
                print("‚úÖ –§–∞–π–ª .env –æ–±–Ω–æ–≤–ª–µ–Ω!")
                print()
                print("üéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å TikTok API")
        
        except Exception as e:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
    
    except KeyboardInterrupt:
        print("\n\n‚ùå –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)


if __name__ == "__main__":
    main()


