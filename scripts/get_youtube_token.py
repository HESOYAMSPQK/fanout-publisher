#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è YouTube OAuth2 refresh token

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
1. –ü–æ–ª—É—á–∏ Client ID –∏ Client Secret –Ω–∞ https://console.cloud.google.com/apis/credentials
2. –ó–∞–ø—É—Å—Ç–∏ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç: python scripts/get_youtube_token.py
3. –û—Ç–∫—Ä–æ–π –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ
4. –†–∞–∑—Ä–µ—à–∏ –¥–æ—Å—Ç—É–ø
5. –°–∫–æ–ø–∏—Ä—É–π –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
6. –í—Å—Ç–∞–≤—å –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
7. –°–∫–æ–ø–∏—Ä—É–π refresh_token –≤ .env
"""
import os
from google_auth_oauthlib.flow import InstalledAppFlow
from dotenv import load_dotenv

load_dotenv()

# Scopes –¥–ª—è YouTube API
SCOPES = ['https://www.googleapis.com/auth/youtube.upload']

def get_refresh_token():
    """–ü–æ–ª—É—á–∏—Ç—å refresh token —á–µ—Ä–µ–∑ OAuth2 flow"""
    
    client_id = os.getenv('YOUTUBE_CLIENT_ID')
    client_secret = os.getenv('YOUTUBE_CLIENT_SECRET')
    
    if not client_id or not client_secret:
        print("‚ùå Error: YOUTUBE_CLIENT_ID and YOUTUBE_CLIENT_SECRET must be set in .env")
        print("\nüìù Get them from: https://console.cloud.google.com/apis/credentials")
        print("   1. Create OAuth 2.0 Client ID")
        print("   2. Application type: Desktop app or Web application")
        print("   3. Add authorized redirect URIs: http://localhost:8080/")
        return
    
    # –°–æ–∑–¥–∞–µ–º client config
    client_config = {
        "installed": {
            "client_id": client_id,
            "client_secret": client_secret,
            "auth_uri": "https://accounts.google.com/o/oauth2/auth",
            "token_uri": "https://oauth2.googleapis.com/token",
            "redirect_uris": ["http://localhost:8080/", "urn:ietf:wg:oauth:2.0:oob"]
        }
    }
    
    try:
        flow = InstalledAppFlow.from_client_config(
            client_config,
            scopes=SCOPES
        )
        
        print("\nüîê Starting OAuth2 flow...")
        print("\n‚ö†Ô∏è  If browser doesn't open automatically, copy the URL and open it manually.")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞
        creds = flow.run_local_server(
            port=8080,
            authorization_prompt_message='Opening browser for authorization...',
            success_message='Authorization successful! You can close this window.',
            open_browser=True
        )
        
        print("\n‚úÖ Authorization successful!")
        print(f"\nüìã Your refresh token:\n")
        print(f"YOUTUBE_REFRESH_TOKEN={creds.refresh_token}")
        print(f"\nüíæ Add this line to your .env file")
        
        # –¢–∞–∫–∂–µ –≤—ã–≤–æ–¥–∏–º access token –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        print(f"\nüîë Access token (expires in {creds.expiry}):")
        print(f"{creds.token[:50]}...")
        
    except Exception as e:
        print(f"\n‚ùå Error: {e}")
        print("\nüí° If you see 'redirect_uri_mismatch' error:")
        print("   1. Go to Google Cloud Console")
        print("   2. Add http://localhost:8080/ to authorized redirect URIs")


if __name__ == "__main__":
    print("=" * 70)
    print("YouTube OAuth2 Refresh Token Generator")
    print("=" * 70)
    get_refresh_token()


