#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ Fanout Publisher

set -e

echo "=================================="
echo "Fanout Publisher - Quick Start"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env
if [ ! -f .env ]; then
    echo "‚ö†Ô∏è  .env file not found!"
    echo "üìù Copying .env.example to .env..."
    cp .env.example .env
    echo ""
    echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π .env —Ñ–∞–π–ª –∏ –∑–∞–ø–æ–ª–Ω–∏:"
    echo "   - SERVICE_TOKEN (openssl rand -hex 32)"
    echo "   - POSTGRES_PASSWORD"
    echo "   - MINIO_SECRET_KEY"
    echo "   - TELEGRAM_API_ID (https://my.telegram.org)"
    echo "   - TELEGRAM_API_HASH (https://my.telegram.org)"
    echo "   - TELEGRAM_BOT_TOKEN (@BotFather)"
    echo "   - TELEGRAM_ADMIN_ID (—Ç–≤–æ–π User ID)"
    echo "   - YOUTUBE_CLIENT_ID (Google Cloud Console)"
    echo "   - YOUTUBE_CLIENT_SECRET (Google Cloud Console)"
    echo "   - YOUTUBE_REFRESH_TOKEN (–∑–∞–ø—É—Å—Ç–∏ scripts/get_youtube_token.py)"
    echo ""
    echo "–ü–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è .env –∑–∞–ø—É—Å—Ç–∏ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
    exit 1
fi

echo "‚úÖ .env file found"
echo ""

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SERVICE_TOKEN –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if grep -q "change_me_generate_random_token" .env; then
    echo "üîê Generating SERVICE_TOKEN..."
    NEW_TOKEN=$(openssl rand -hex 32)
    if [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS
        sed -i '' "s/change_me_generate_random_token/$NEW_TOKEN/g" .env
    else
        # Linux
        sed -i "s/change_me_generate_random_token/$NEW_TOKEN/g" .env
    fi
    echo "‚úÖ SERVICE_TOKEN generated"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker not found! Please install Docker first."
    exit 1
fi

if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    echo "‚ùå Docker Compose not found! Please install Docker Compose first."
    exit 1
fi

echo "‚úÖ Docker and Docker Compose found"
echo ""

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üöÄ Starting services..."
docker compose up -d

echo ""
echo "‚è≥ Waiting for services to be ready (30 seconds)..."
sleep 30

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
echo ""
echo "üóÑÔ∏è  Initializing database..."
docker compose exec -T api python scripts/init_db.py || echo "‚ö†Ô∏è  DB init failed, might be already initialized"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health
echo ""
echo "üè• Checking API health..."
curl -f http://localhost:8000/health || echo "‚ö†Ô∏è  API health check failed"

echo ""
echo "=================================="
echo "‚úÖ Fanout Publisher is running!"
echo "=================================="
echo ""
echo "üì° API: http://localhost:8000"
echo "üìä MinIO Console: http://localhost:9001 (minioadmin / minioadmin)"
echo "üóÑÔ∏è  PostgreSQL: localhost:5432 (fanout_user / <your_password>)"
echo ""
echo "üìã Next steps:"
echo "   1. –ü—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏: docker compose logs -f"
echo "   2. –ü–æ–ª—É—á–∏ YouTube refresh token:"
echo "      docker compose exec api python scripts/get_youtube_token.py"
echo "   3. –¢–µ—Å—Ç–∏—Ä—É–π API:"
echo "      docker compose exec api python scripts/probe_ingest.py"
echo "   4. –ù–∞–π–¥–∏ —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞ –≤ Telegram –∏ –æ—Ç–ø—Ä–∞–≤—å /start"
echo ""
echo "üí° Useful commands:"
echo "   make help           - Show all commands"
echo "   make logs           - Show all logs"
echo "   make logs-api       - Show API logs"
echo "   make logs-bot       - Show bot logs"
echo "   make test-api       - Test API"
echo "   make youtube-token  - Get YouTube token"
echo ""


