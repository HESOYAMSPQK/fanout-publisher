#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è TikTok Access Token —á–µ—Ä–µ–∑ OAuth 2.0

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å access token –¥–ª—è TikTok Content Posting API,
–∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ.

–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:
1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ https://developers.tiktok.com/
2. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (App)
3. –ü–æ–ª—É—á–∏—Ç–µ Client Key –∏ Client Secret
4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º
5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π access_token –≤ .env —Ñ–∞–π–ª
"""

import webbrowser
import urllib.parse
from http.server import HTTPServer, BaseHTTPRequestHandler
import sys
import requests
import secrets

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TIKTOK_CLIENT_KEY = None  # –ë—É–¥–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
TIKTOK_CLIENT_SECRET = None  # –ë—É–¥–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
TIKTOK_REDIRECT_URI = 'http://localhost:8080/callback'  # –õ–æ–∫–∞–ª—å–Ω—ã–π callback

# OAuth endpoints
AUTHORIZE_URL = "https://www.tiktok.com/v2/auth/authorize/"
TOKEN_URL = "https://open.tiktokapis.com/v2/oauth/token/"

# Scopes –¥–ª—è Content Posting API
SCOPES = ['user.info.basic', 'video.upload', 'video.publish']

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
auth_code = None
access_token = None
refresh_token = None


class OAuthCallbackHandler(BaseHTTPRequestHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ OAuth callback –æ—Ç TikTok"""
    
    def do_GET(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ GET –∑–∞–ø—Ä–æ—Å–∞ —Å authorization code"""
        global auth_code
        
        # –ü–∞—Ä—Å–∏–º URL
        parsed_url = urllib.parse.urlparse(self.path)
        query_params = urllib.parse.parse_qs(parsed_url.query)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ code
        if 'code' in query_params:
            auth_code = query_params['code'][0]
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —É—Å–ø–µ—Ö–æ–º
            self.send_response(200)
            self.send_header('Content-type', 'text/html; charset=utf-8')
            self.end_headers()
            
            html = """
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <title>TikTok OAuth - –£—Å–ø–µ—à–Ω–æ!</title>
                <style>
                    body {
                        font-family: Arial, sans-serif;
                        max-width: 800px;
                        margin: 50px auto;
                        padding: 20px;
                        background: #f5f5f5;
                    }
                    .container {
                        background: white;
                        padding: 30px;
                        border-radius: 10px;
                        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                    }
                    h1 { color: #00f7ef; }
                    .success { color: #28a745; }
                </style>
            </head>
            <body>
                <div class="container">
                    <h1>‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è TikTok —É—Å–ø–µ—à–Ω–∞!</h1>
                    <p class="success">Authorization code –ø–æ–ª—É—á–µ–Ω!</p>
                    <p>–°–µ–π—á–∞—Å –ø–æ–ª—É—á–∞–µ–º access token...</p>
                    <p>–í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞.</p>
                    <p class="success">üéâ –ú–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç–æ –æ–∫–Ω–æ.</p>
                </div>
            </body>
            </html>
            """
            
            self.wfile.write(html.encode('utf-8'))
            
        elif 'error' in query_params:
            # –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            error = query_params.get('error', ['Unknown error'])[0]
            error_desc = query_params.get('error_description', [''])[0]
            
            self.send_response(400)
            self.send_header('Content-type', 'text/html; charset=utf-8')
            self.end_headers()
            
            html = f"""
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <title>TikTok OAuth - –û—à–∏–±–∫–∞</title>
                <style>
                    body {{
                        font-family: Arial, sans-serif;
                        max-width: 800px;
                        margin: 50px auto;
                        padding: 20px;
                        background: #f5f5f5;
                    }}
                    .container {{
                        background: white;
                        padding: 30px;
                        border-radius: 10px;
                        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                    }}
                    .error {{ color: #dc3545; }}
                </style>
            </head>
            <body>
                <div class="container">
                    <h1 class="error">‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</h1>
                    <p><strong>–û—à–∏–±–∫–∞:</strong> {error}</p>
                    <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> {error_desc}</p>
                    <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.</p>
                </div>
            </body>
            </html>
            """
            
            self.wfile.write(html.encode('utf-8'))
    
    def log_message(self, format, *args):
        """–û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞"""
        pass


def exchange_code_for_token(code: str) -> dict:
    """
    –û–±–º–µ–Ω—è—Ç—å authorization code –Ω–∞ access token
    
    Args:
        code: Authorization code –æ—Ç TikTok
        
    Returns:
        Dict —Å —Ç–æ–∫–µ–Ω–∞–º–∏
    """
    data = {
        'client_key': TIKTOK_CLIENT_KEY,
        'client_secret': TIKTOK_CLIENT_SECRET,
        'code': code,
        'grant_type': 'authorization_code',
        'redirect_uri': TIKTOK_REDIRECT_URI
    }
    
    headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Cache-Control': 'no-cache'
    }
    
    try:
        response = requests.post(TOKEN_URL, data=data, headers=headers, timeout=30)
        response.raise_for_status()
        
        result = response.json()
        
        if 'error' in result:
            raise Exception(f"TikTok API Error: {result.get('error')} - {result.get('error_description')}")
        
        return result
        
    except requests.RequestException as e:
        raise Exception(f"Token exchange request failed: {str(e)}")


def get_tiktok_access_token():
    """–ü–æ–ª—É—á–∏—Ç—å TikTok Access Token —á–µ—Ä–µ–∑ OAuth 2.0"""
    global TIKTOK_CLIENT_KEY, TIKTOK_CLIENT_SECRET, auth_code, access_token, refresh_token
    
    print("="*60)
    print("üîë –ü–æ–ª—É—á–µ–Ω–∏–µ TikTok Access Token")
    print("="*60)
    print()
    
    # –®–∞–≥ 1: –ü–æ–ª—É—á–∏—Ç—å Client Key –∏ Secret
    print("üì± –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ TikTok –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("-" * 60)
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ: https://developers.tiktok.com/")
    print("2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π TikTok –∞–∫–∫–∞—É–Ω—Ç")
    print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ 'Manage apps' ‚Üí 'Create an app'")
    print("4. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É:")
    print("   - App name: 'Fanout Publisher' (–∏–ª–∏ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ)")
    print("   - App type: 'Web App'")
    print("5. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("6. –í —Ä–∞–∑–¥–µ–ª–µ 'Basic Information' —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ:")
    print("   - Client Key")
    print("   - Client Secret")
    print()
    print("‚ÑπÔ∏è  –í–ê–ñ–ù–û: –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–æ–±–∞–≤—å—Ç–µ:")
    print(f"   Redirect URI: {TIKTOK_REDIRECT_URI}")
    print("   –í —Ä–∞–∑–¥–µ–ª–µ 'Login Kit' ‚Üí 'Redirect URL'")
    print()
    
    TIKTOK_CLIENT_KEY = input("–í–≤–µ–¥–∏—Ç–µ Client Key: ").strip()
    
    if not TIKTOK_CLIENT_KEY:
        print("‚ùå –û—à–∏–±–∫–∞: Client Key –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        sys.exit(1)
    
    TIKTOK_CLIENT_SECRET = input("–í–≤–µ–¥–∏—Ç–µ Client Secret: ").strip()
    
    if not TIKTOK_CLIENT_SECRET:
        print("‚ùå –û—à–∏–±–∫–∞: Client Secret –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        sys.exit(1)
    
    print()
    print("üìù –®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Redirect URI –∏ Scopes")
    print("-" * 60)
    print("1. –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ 'Add products'")
    print("2. –î–æ–±–∞–≤—å—Ç–µ 'Login Kit' –∏ 'Content Posting API'")
    print("3. –í 'Login Kit' –¥–æ–±–∞–≤—å—Ç–µ Redirect URL:")
    print(f"   {TIKTOK_REDIRECT_URI}")
    print("4. –í 'Content Posting API' –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ scopes:")
    print(f"   {', '.join(SCOPES)}")
    print("5. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    print()
    
    input("–ù–∞–∂–º–∏—Ç–µ Enter –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É... ")
    
    # –®–∞–≥ 2: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º state –¥–ª—è CSRF –∑–∞—â–∏—Ç—ã
    state = secrets.token_urlsafe(32)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º OAuth URL
    print()
    print("üåê –®–∞–≥ 3: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
    print("-" * 60)
    
    auth_params = {
        'client_key': TIKTOK_CLIENT_KEY,
        'scope': ','.join(SCOPES),
        'response_type': 'code',
        'redirect_uri': TIKTOK_REDIRECT_URI,
        'state': state
    }
    
    auth_url = f"{AUTHORIZE_URL}?{urllib.parse.urlencode(auth_params)}"
    
    print("–°–µ–π—á–∞—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    print(f"–ï—Å–ª–∏ –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:")
    print(auth_url)
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è callback
    server = HTTPServer(('localhost', 8080), OAuthCallbackHandler)
    
    print("üîÑ –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8080")
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    print()
    print("‚ö†Ô∏è  –í–ê–ñ–ù–û –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –†–æ—Å—Å–∏–∏:")
    print("   TikTok –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ VPN!")
    print("   –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç - –≤–∫–ª—é—á–∏—Ç–µ VPN –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
    print()
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    webbrowser.open(auth_url)
    
    # –ñ–¥–µ–º callback
    server.handle_request()
    server.server_close()
    
    if not auth_code:
        print("\n‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å authorization code")
        print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        sys.exit(1)
    
    print("\n‚úÖ Authorization code –ø–æ–ª—É—á–µ–Ω!")
    print("üîÑ –û–±–º–µ–Ω–∏–≤–∞–µ–º code –Ω–∞ access token...")
    print()
    
    # –®–∞–≥ 3: –û–±–º–µ–Ω–∏–≤–∞–µ–º code –Ω–∞ access token
    try:
        token_data = exchange_code_for_token(auth_code)
        
        access_token = token_data.get('data', {}).get('access_token')
        refresh_token = token_data.get('data', {}).get('refresh_token')
        expires_in = token_data.get('data', {}).get('expires_in', 0)
        open_id = token_data.get('data', {}).get('open_id', '')
        
        if not access_token:
            raise Exception("Access token not found in response")
        
        print("="*60)
        print("‚úÖ TikTok Access Token —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω!")
        print("="*60)
        print(f"\nOpen ID: {open_id}")
        print(f"Expires in: {expires_in} —Å–µ–∫—É–Ω–¥ ({expires_in // 3600} —á–∞—Å–æ–≤)")
        print(f"\nAccess Token:")
        print(access_token)
        if refresh_token:
            print(f"\nRefresh Token:")
            print(refresh_token)
        print("\n" + "="*60)
        print("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ Access Token –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
        print(f"TIKTOK_ACCESS_TOKEN={access_token}")
        print(f"TIKTOK_CLIENT_KEY={TIKTOK_CLIENT_KEY}")
        print(f"TIKTOK_CLIENT_SECRET={TIKTOK_CLIENT_SECRET}")
        print("="*60 + "\n")
        
        print("\nüí° –°–æ–≤–µ—Ç:")
        print(f"   - Access Token –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω {expires_in // 3600} —á–∞—Å–æ–≤")
        print("   - Refresh Token –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞")
        print("   - –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –æ–±–∞ —Ç–æ–∫–µ–Ω–∞ –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ!")
        
        return access_token
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–º–µ–Ω–µ –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω: {e}")
        sys.exit(1)


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        get_tiktok_access_token()
    except KeyboardInterrupt:
        print("\n\n‚ùå –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)


if __name__ == "__main__":
    main()



