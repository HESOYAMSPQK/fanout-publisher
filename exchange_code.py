import requests
import json
import os
from pathlib import Path

print("=" * 70)
print("üîê –û–±–º–µ–Ω TikTok Authorization Code –Ω–∞ Access Token")
print("=" * 70)

# –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CLIENT_KEY = input("\nüìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à TikTok Client Key: ").strip()

if not CLIENT_KEY:
    print("‚ùå Client Key –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
    exit(1)

CLIENT_SECRET = input("üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à TikTok Client Secret: ").strip()

if not CLIENT_SECRET:
    print("‚ùå Client Secret –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
    exit(1)

# –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∫–æ–¥ –∏–∑ —Ñ–∞–π–ª–∞ tiktok_pkce_info.txt
authorization_code_default = ""
pkce_file = Path("tiktok_pkce_info.txt")
if pkce_file.exists():
    print("\nüìÑ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª tiktok_pkce_info.txt")
    content = pkce_file.read_text(encoding='utf-8')
    # –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, –ø—Ä–æ—Å—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º

AUTHORIZATION_CODE = input("\nüìù –í–≤–µ–¥–∏—Ç–µ Authorization Code (–∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞): ").strip()

if not AUTHORIZATION_CODE:
    print("‚ùå Authorization Code –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
    exit(1)

# –í—ã–±–æ—Ä redirect URI (–¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å —Ç–µ–º, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL)
print("\nüîó –í—ã–±–µ—Ä–∏—Ç–µ Redirect URI (—Ç–æ—Ç –∂–µ, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏):")
print("1. https://justinstolpe.com/blog_code/tiktokapi/login.php")
print("2. http://localhost:8080/callback")
print("3. –î—Ä—É–≥–æ–π (–≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é)")

choice = input("\n–í—ã–±–æ—Ä (1/2/3): ").strip()

if choice == "1":
    REDIRECT_URI = "https://justinstolpe.com/blog_code/tiktokapi/login.php"
elif choice == "2":
    REDIRECT_URI = "http://localhost:8080/callback"
elif choice == "3":
    REDIRECT_URI = input("–í–≤–µ–¥–∏—Ç–µ Redirect URI: ").strip()
else:
    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
    exit(1)

print("üîÑ –û–±–º–µ–Ω –∫–æ–¥–∞ –Ω–∞ Access Token...")

url = "https://open.tiktokapis.com/v2/oauth/token/"
data = {
    "client_key": CLIENT_KEY,
    "client_secret": CLIENT_SECRET,
    "code": AUTHORIZATION_CODE,
    "grant_type": "authorization_code",
    "redirect_uri": REDIRECT_URI
}

response = requests.post(url, data=data)
result = response.json()

print(f"\nüì• –û—Ç–≤–µ—Ç –æ—Ç TikTok (HTTP {response.status_code}):")

if "access_token" in result:
    print("\n" + "=" * 70)
    print("üéâ –£–°–ü–ï–•! –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω!")
    print("=" * 70)
    
    print(f"\n‚úÖ Access Token:")
    print(result["access_token"])
    
    if "refresh_token" in result:
        print(f"\n‚úÖ Refresh Token:")
        print(result["refresh_token"])
    
    print("\nüìù –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤ .env —Ñ–∞–π–ª:")
    print("=" * 70)
    print(f"TIKTOK_ACCESS_TOKEN={result['access_token']}")
    
    if "refresh_token" in result:
        print(f"TIKTOK_REFRESH_TOKEN={result['refresh_token']}")
    
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ!")
    
    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    try:
        auto_save = input("\nüíæ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç—å .env —Ñ–∞–π–ª? (y/n): ").strip().lower()
        
        if auto_save == 'y':
            from pathlib import Path
            
            env_path = Path('.env')
            
            if env_path.exists():
                env_content = env_path.read_text(encoding='utf-8')
            else:
                env_content = ""
            
            lines = env_content.split('\n')
            updated_access = False
            updated_refresh = False
            
            for i, line in enumerate(lines):
                if line.startswith('TIKTOK_ACCESS_TOKEN='):
                    lines[i] = f'TIKTOK_ACCESS_TOKEN={result["access_token"]}'
                    updated_access = True
                elif "refresh_token" in result and line.startswith('TIKTOK_REFRESH_TOKEN='):
                    lines[i] = f'TIKTOK_REFRESH_TOKEN={result["refresh_token"]}'
                    updated_refresh = True
            
            if not updated_access:
                if env_content and not env_content.endswith('\n'):
                    lines.append('')
                lines.append(f'TIKTOK_ACCESS_TOKEN={result["access_token"]}')
            
            if "refresh_token" in result and not updated_refresh:
                lines.append(f'TIKTOK_REFRESH_TOKEN={result["refresh_token"]}')
            
            new_content = '\n'.join(lines)
            env_path.write_text(new_content, encoding='utf-8')
            
            print("‚úÖ –§–∞–π–ª .env –æ–±–Ω–æ–≤–ª–µ–Ω!")
    except:
        pass
        
else:
    print("\n‚ùå –û—à–∏–±–∫–∞:")
    print(json.dumps(result, indent=2, ensure_ascii=False))
    
    if "error" in result:
        error = result["error"]
        if error == "invalid_code":
            print("\nüí° –ö–æ–¥ –∏—Å—Ç—ë–∫ (–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 10 –º–∏–Ω—É—Ç) –∏–ª–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω.")
            print("   –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ–¥: python scripts/create_tiktok_auth_url.py")
        elif error == "invalid_client":
            print("\nüí° –ù–µ–≤–µ—Ä–Ω—ã–π Client Key –∏–ª–∏ Client Secret.")
            print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ TikTok Developer Portal")

